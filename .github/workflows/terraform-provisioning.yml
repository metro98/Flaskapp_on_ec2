name: Basic CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: Provision Infrastructure with Terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Initialize Terraform
        run: terraform init

      - name: Apply Terraform Plan and Output Instance IPs
        run: |
          terraform plan -out=tfplan
          terraform apply -auto-approve tfplan
          terraform output -json > tf_outputs.json

      - name: Upload Terraform Outputs as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: tf-outputs
          path: tf_outputs.json

  ansible:
    name: Configure and Deploy Application with Ansible
    runs-on: ubuntu-latest
    needs: terraform

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download Terraform Outputs Artifact
        uses: actions/download-artifact@v3
        with:
          name: tf-outputs

      - name: Add SSH key for Ansible
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_PRIVATE_KEY }}

      - name: Install Ansible and Dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y python3-pip jq ansible

      - name: Generate Static Inventory File from Terraform Outputs
        run: |
          INSTANCE_IPS=$(jq -r '.ec2_instance_ips.value[]' < tf_outputs.json)
          echo "[ec2_instances]" > inventory.ini
          for ip in $INSTANCE_IPS; do
            echo "$ip ansible_user=ec2-user" >> inventory.ini
          done

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Execute Ansible Playbook using Inventory File
        run: |
          ansible-playbook -i inventory.ini deploy.yml --key-file ~/.ssh/id_rsa
