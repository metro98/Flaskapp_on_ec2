name: Basic CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: Provision Infrastructure with Terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Initialize Terraform
        run: terraform init

      - name: Apply Terraform Plan and Save Outputs
        run: |
          terraform plan -out=tfplan
          terraform apply -auto-approve tfplan
          terraform output -json > tf_outputs.json

      - name: Generate Inventory File Using Python Script
        run: |
          python3 <<EOF
import json

def generate_inventory(terraform_output_file, inventory_file):
    try:
        # Read the Terraform output JSON file
        with open(terraform_output_file, 'r') as tf_file:
            terraform_outputs = json.load(tf_file)

        # Extract the IP addresses from the Terraform output
        instance_ips = terraform_outputs.get('ec2_instance_ips', {}).get('value', [])

        # Write the inventory file
        with open(inventory_file, 'w') as inv_file:
            inv_file.write("[ec2_instances]\n")
            for ip in instance_ips:
                inv_file.write(f"{ip} ansible_user=ec2-user\n")

        print(f"Inventory file '{inventory_file}' generated successfully.")
    except Exception as e:
        print(f"Error generating inventory file: {e}")

# Generate inventory.ini from tf_outputs.json
generate_inventory('tf_outputs.json', 'inventory.ini')
EOF

  ansible:
    name: Configure and Deploy Application with Ansible
    runs-on: ubuntu-latest
    needs: terraform

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Add SSH key for Ansible
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_PRIVATE_KEY }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Execute Ansible Playbook using Inventory File
        run: |
          ansible-playbook -i inventory.ini deploy.yml --key-file ~/.ssh/id_rsa
